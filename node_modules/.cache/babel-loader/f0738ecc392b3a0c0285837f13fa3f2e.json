{"ast":null,"code":"var _jsxFileName = \"C:\\\\code editor\\\\CodeOne-main\\\\frontend\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { App as WebEditor } from './Components/Web Editor/App';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleContext = /*#__PURE__*/React.createContext();\nexport default function App() {\n  _s();\n\n  useEffect(() => {\n    const connector = io('http://localhost:4545'); // setSocket(connector)\n\n    return () => {\n      connector.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WebEditor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/code editor/CodeOne-main/frontend/src/App.jsx"],"names":["React","useEffect","App","WebEditor","io","ToggleContext","createContext","connector","disconnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAG,IAAIC,SAAhB,QAAiC,6BAAjC;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,OAAO,MAAMC,aAAa,gBAAGL,KAAK,CAACM,aAAN,EAAtB;AAEP,eAAe,SAASJ,GAAT,GAAe;AAAA;;AAE5BD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAGH,EAAE,CAAC,uBAAD,CAApB,CADc,CAEd;;AAEA,WAAO,MAAM;AACXG,MAAAA,SAAS,CAACC,UAAV;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AAQE,sBACE;AAAA,2BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKH;;GAfuBN,G;;KAAAA,G","sourcesContent":["import React, { useEffect } from 'react'\nimport { App as WebEditor } from './Components/Web Editor/App'\nimport { io } from 'socket.io-client'\n\nexport const ToggleContext = React.createContext()\n\nexport default function App() {\n\n  useEffect(() => {\n    const connector = io('http://localhost:4545')\n    // setSocket(connector)\n\n    return () => {\n      connector.disconnect()\n    }\n  }, [])\n    return (\n      <div>\n          <WebEditor />\n      </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}