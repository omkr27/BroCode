{"ast":null,"code":"var _jsxFileName = \"C:\\\\code editor\\\\CodeOne-main\\\\frontend\\\\src\\\\Components\\\\IDE\\\\components\\\\Playground.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Editor from '@monaco-editor/react';\nimport { Col, Row } from 'react-bootstrap';\nimport Input from './Input';\nimport Output from './Output';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Playground(prop) {\n  _s();\n\n  const [currentCode, setCurrentCode] = useState(); // here we the value which is on the editor be it empty\n\n  useEffect(() => {\n    if (prop.sockets == null) return;\n    prop.sockets.emit('send-playground', prop.code);\n  }, [prop.sockets, prop.code]);\n  useEffect(() => {\n    if (prop.sockets == null) return;\n    prop.sockets.on('receive-playground', val => {\n      console.log('recieve'); // prop.handleCode(val)\n\n      setCurrentCode(val);\n    });\n  }, [prop.sockets]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playground\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          width: \"60vw\",\n          height: \"100vh\",\n          defaultLanguage: prop.currentLang.code,\n          value: currentCode // defaultValue={prop.code}\n          ,\n          theme: \"vs-dark\" // onMount={(monaco) => {\n          //   monaco.getModel().applyEdits(\"hkdnwqinqw\")\n          // }}\n          ,\n          onChange: value => prop.handleCode(value),\n          options: {\n            fontSize: prop.fontSize,\n            autoIndent: 'full'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"p-0\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            inputHandler: prop.handleInput,\n            input: prop.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Output, {\n            out: prop.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Playground, \"6vNoVcL6udrcj2KkZO3hJbB3tUU=\");\n\n_c = Playground;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playground\");","map":{"version":3,"sources":["C:/code editor/CodeOne-main/frontend/src/Components/IDE/components/Playground.jsx"],"names":["React","useEffect","Editor","Col","Row","Input","Output","useState","Playground","prop","currentCode","setCurrentCode","sockets","emit","code","on","val","console","log","currentLang","value","handleCode","fontSize","autoIndent","handleInput","input","output"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,EAA9C,CADuC,CACW;;AAElDN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAI,CAACG,OAAL,IAAgB,IAApB,EAA0B;AAC1BH,IAAAA,IAAI,CAACG,OAAL,CAAaC,IAAb,CAAkB,iBAAlB,EAAqCJ,IAAI,CAACK,IAA1C;AACD,GAHQ,EAGN,CAACL,IAAI,CAACG,OAAN,EAAeH,IAAI,CAACK,IAApB,CAHM,CAAT;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAI,CAACG,OAAL,IAAgB,IAApB,EAA0B;AAC1BH,IAAAA,IAAI,CAACG,OAAL,CAAaG,EAAb,CAAgB,oBAAhB,EAAuCC,GAAD,IAAS;AAC7CC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAD6C,CAE7C;;AACAP,MAAAA,cAAc,CAACK,GAAD,CAAd;AACD,KAJD;AAKD,GAPQ,EAON,CAACP,IAAI,CAACG,OAAN,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,MAAM,EAAC,OAFT;AAGE,UAAA,eAAe,EAAEH,IAAI,CAACU,WAAL,CAAiBL,IAHpC;AAIE,UAAA,KAAK,EAAEJ,WAJT,CAKE;AALF;AAME,UAAA,KAAK,EAAC,SANR,CAOE;AACA;AACA;AATF;AAUE,UAAA,QAAQ,EAAGU,KAAD,IAAWX,IAAI,CAACY,UAAL,CAAgBD,KAAhB,CAVvB;AAWE,UAAA,OAAO,EAAE;AACPE,YAAAA,QAAQ,EAAEb,IAAI,CAACa,QADR;AAEPC,YAAAA,UAAU,EAAE;AAFL;AAXX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,GAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,YAAY,EAAEd,IAAI,CAACe,WAA1B;AAAuC,YAAA,KAAK,EAAEf,IAAI,CAACgB;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,GAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEhB,IAAI,CAACiB;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAlDuBlB,U;;KAAAA,U","sourcesContent":["import React, { useEffect } from 'react'\nimport Editor from '@monaco-editor/react'\nimport { Col, Row } from 'react-bootstrap'\nimport Input from './Input'\nimport Output from './Output'\nimport { useState } from 'react'\n\nexport default function Playground(prop) {\n  const [currentCode, setCurrentCode] = useState()  // here we the value which is on the editor be it empty\n\n  useEffect(() => {\n    if (prop.sockets == null) return\n    prop.sockets.emit('send-playground', prop.code)\n  }, [prop.sockets, prop.code])\n\n  useEffect(() => {\n    if (prop.sockets == null) return\n    prop.sockets.on('receive-playground', (val) => {\n      console.log('recieve')\n      // prop.handleCode(val)\n      setCurrentCode(val)\n    })\n  }, [prop.sockets])\n\n  return (\n    <div className='playground'>\n      <Row>\n        <Col>\n          <Editor\n            width='60vw'\n            height='100vh'\n            defaultLanguage={prop.currentLang.code}\n            value={currentCode}\n            // defaultValue={prop.code}\n            theme='vs-dark'\n            // onMount={(monaco) => {\n            //   monaco.getModel().applyEdits(\"hkdnwqinqw\")\n            // }}\n            onChange={(value) => prop.handleCode(value)}\n            options={{\n              fontSize: prop.fontSize,\n              autoIndent: 'full',\n            }}\n          />\n        </Col>\n\n        <Col className='p-0'>\n          <Row>\n            <Input inputHandler={prop.handleInput} input={prop.input} />\n          </Row>\n          <Row>\n            <Output out={prop.output} />\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}