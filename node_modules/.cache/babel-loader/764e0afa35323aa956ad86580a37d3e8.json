{"ast":null,"code":"var _jsxFileName = \"C:\\\\code editor\\\\CodeOne-main\\\\frontend\\\\src\\\\Components\\\\SignIn\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { Form, Icon, Input, Button, Checkbox, message } from \"antd\";\nimport loginImg from './login.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormItem = Form.Item;\n\nclass NormalLoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isLoggedIn = () => {\n      // window.loggedUsername should be defined by UI page / jelly script\n      // if it's 'guest' that means there is no active user session\n      if (window.loggedUsername === 'guest') {\n        return false;\n      } else {\n        return true; // set it to false for local development to prevent passing through\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          var details = {\n            sysparm_type: \"login\",\n            \"ni.nolog.user_password\": true,\n            remember_me: values.remember,\n            user_name: values.userName,\n            user_password: values.password,\n            get_redirect_url: true,\n            sysparm_goto_url: \"navpage.do\"\n          };\n          var formBody = [];\n\n          for (var property in details) {\n            var encodedKey = encodeURIComponent(property);\n            var encodedValue = encodeURIComponent(details[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n          }\n\n          formBody = formBody.join(\"&\");\n          axios({\n            method: \"post\",\n            url: \"angular.do?sysparm_type=view_form.login\",\n            data: formBody,\n            config: {\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }\n            }\n          }).then(function (response) {\n            if (response.data.status === 'error') {\n              message.error(response.data.message);\n            } else if (response.data.status === 'success') {\n              message.success(response.data.message);\n              setTimeout(() => {\n                window.location = window.mainAppPage;\n              }, 500);\n            } else {\n              message.warning('Unknown response status' + response.data.message);\n            }\n          }).catch(function (response) {\n            message.error('Network error. Cannot log in.');\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n\n    if (this.isLoggedIn()) {\n      window.location = window.mainAppPage;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.isLoggedIn() ? ' ' : ' hidden',\n        children: \"Successfully logged in...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lContainer\" + (this.isLoggedIn() ? ' hidden' : ' '),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginImage\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: loginImg,\n              width: \"300\",\n              style: {\n                position: 'relative'\n              },\n              alt: \"login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.handleSubmit,\n              className: \"login-form\",\n              children: [/*#__PURE__*/_jsxDEV(FormItem, {\n                children: getFieldDecorator(\"userName\", {\n                  rules: [{\n                    required: true,\n                    message: \"Please enter your username\"\n                  }]\n                })( /*#__PURE__*/_jsxDEV(Input, {\n                  prefix: /*#__PURE__*/_jsxDEV(Icon, {\n                    type: \"user\",\n                    style: {\n                      color: \"rgba(0,0,0,.25)\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 29\n                  }, this),\n                  placeholder: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n                children: getFieldDecorator(\"password\", {\n                  rules: [{\n                    required: true,\n                    message: \"Please enter your Password\"\n                  }]\n                })( /*#__PURE__*/_jsxDEV(Input, {\n                  prefix: /*#__PURE__*/_jsxDEV(Icon, {\n                    type: \"lock\",\n                    style: {\n                      color: \"rgba(0,0,0,.25)\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 29\n                  }, this),\n                  type: \"password\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n                children: [getFieldDecorator(\"remember\", {\n                  valuePropName: \"checked\",\n                  initialValue: true\n                })( /*#__PURE__*/_jsxDEV(Checkbox, {\n                  children: \"Remember me\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 20\n                }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  className: \"login-form-button\",\n                  children: \"Log in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"footerLink\",\n            children: \"Powered by React\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst SignIn = Form.create()(NormalLoginForm);\nexport default SignIn;","map":{"version":3,"sources":["C:/code editor/CodeOne-main/frontend/src/Components/SignIn/App.js"],"names":["React","Component","axios","Form","Icon","Input","Button","Checkbox","message","loginImg","FormItem","Item","NormalLoginForm","isLoggedIn","window","loggedUsername","handleSubmit","e","preventDefault","props","form","validateFields","err","values","details","sysparm_type","remember_me","remember","user_name","userName","user_password","password","get_redirect_url","sysparm_goto_url","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","method","url","data","config","headers","then","response","status","error","success","setTimeout","location","mainAppPage","warning","catch","render","getFieldDecorator","position","rules","required","color","valuePropName","initialValue","SignIn","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { Form, Icon, Input, Button, Checkbox, message } from \"antd\";\nimport loginImg from './login.png'\nconst FormItem = Form.Item;\n\nclass NormalLoginForm extends Component {\n  \n  isLoggedIn = () => {\n    // window.loggedUsername should be defined by UI page / jelly script\n    // if it's 'guest' that means there is no active user session\n    if (window.loggedUsername==='guest') {\n      return false;\n    } else {\n      return true; // set it to false for local development to prevent passing through\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        var details = {\n          sysparm_type: \"login\",\n          \"ni.nolog.user_password\": true,\n          remember_me: values.remember,\n          user_name: values.userName,\n          user_password: values.password,\n          get_redirect_url: true,\n          sysparm_goto_url: \"navpage.do\"\n        };\n\n        var formBody = [];\n        for (var property in details) {\n          var encodedKey = encodeURIComponent(property);\n          var encodedValue = encodeURIComponent(details[property]);\n          formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        formBody = formBody.join(\"&\");\n        axios({\n          method: \"post\",\n          url:\n            \"angular.do?sysparm_type=view_form.login\",\n          data: formBody,\n          config: {\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n          }\n        })\n          .then(function(response) {\n            if (response.data.status==='error') {\n              message.error(response.data.message)\n            } else if (response.data.status==='success'){\n              message.success(response.data.message)\n              setTimeout(()=>{window.location = window.mainAppPage;},500);\n            } else {\n              message.warning('Unknown response status'+response.data.message)\n            }\n          })\n          .catch(function(response) {\n            message.error('Network error. Cannot log in.')\n          });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    if (this.isLoggedIn()) {\n      window.location = window.mainAppPage;\n    }\n    return (\n      <div>\n      <div className={this.isLoggedIn() ? ' ' : ' hidden'}>\n        Successfully logged in...\n      </div>\n      <div className={\"lContainer\"+(this.isLoggedIn() ? ' hidden' : ' ')}>\n      <div className=\"lItem\">\n          <div className=\"loginImage\">\n            <img src={loginImg} width=\"300\" style={{position: 'relative'}} alt=\"login\"/>\n          </div>\n          <div className=\"loginForm\">\n            <h2>Login</h2>\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              <FormItem>\n                {getFieldDecorator(\"userName\", {\n                  rules: [{ required: true, message: \"Please enter your username\" }]\n                })(\n                  <Input\n                    prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                    placeholder=\"Username\"\n                  />\n                )}\n              </FormItem>\n              <FormItem>\n                {getFieldDecorator(\"password\", {\n                  rules: [{ required: true, message: \"Please enter your Password\" }]\n                })(\n                  <Input\n                    prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                )}\n              </FormItem>\n              <FormItem>\n                {getFieldDecorator(\"remember\", {\n                  valuePropName: \"checked\",\n                  initialValue: true\n                })(<Checkbox>Remember me</Checkbox>)}\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  Log in\n                </Button>\n              </FormItem>\n            </Form>\n          </div>\n      </div>\n      <div className=\"footer\">\n        <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footerLink\">Powered by React</a>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst SignIn = Form.create()(NormalLoginForm);\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}