{"ast":null,"code":"var _jsxFileName = \"C:\\\\code editor\\\\CodeOne-main\\\\frontend\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { App as Ide } from './Components/IDE/App';\nimport { App as WebEditor } from './Components/Web Editor/App';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleContext = /*#__PURE__*/React.createContext();\nexport default function App() {\n  _s();\n\n  const [Editor, toggle] = useLocalStorage('editor', true); // const [Editor, toggle] = useState('editor', true)\n\n  const [socketIO, setSocket] = useState();\n  useEffect(() => {\n    const connector = io('http://localhost:4545');\n    setSocket(connector);\n    return () => {\n      connector.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socketIO == null) return;\n    socketIO.on('currentEditor', newEditor => {\n      toggle(newEditor);\n    });\n  }, [socketIO, Editor]);\n  useEffect(() => {\n    if (socketIO == null) return;\n    socketIO.emit('toggleEditor', Editor);\n  }, [socketIO, Editor]);\n\n  function handleClick() {\n    toggle(!Editor);\n  }\n\n  if (Editor === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n        value: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Ide, {\n          socket: socketIO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n        value: handleClick,\n        children: /*#__PURE__*/_jsxDEV(WebEditor, {\n          socket: socketIO\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"c+2L5NE+7uA2RbLF4FrQeCSA4TM=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/code editor/CodeOne-main/frontend/src/App.jsx"],"names":["React","useEffect","useState","App","Ide","WebEditor","useLocalStorage","io","ToggleContext","createContext","Editor","toggle","socketIO","setSocket","connector","disconnect","on","newEditor","emit","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAG,IAAIC,GAAhB,QAA2B,sBAA3B;AACA,SAASD,GAAG,IAAIE,SAAhB,QAAiC,6BAAjC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,OAAO,MAAMC,aAAa,gBAAGR,KAAK,CAACS,aAAN,EAAtB;AAEP,eAAe,SAASN,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACO,MAAD,EAASC,MAAT,IAAmBL,eAAe,CAAC,QAAD,EAAW,IAAX,CAAxC,CAD4B,CAE5B;;AAEA,QAAM,CAACM,QAAD,EAAWC,SAAX,IAAwBX,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAGP,EAAE,CAAC,uBAAD,CAApB;AACAM,IAAAA,SAAS,CAACC,SAAD,CAAT;AAEA,WAAO,MAAM;AACXA,MAAAA,SAAS,CAACC,UAAV;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,QAAQ,IAAI,IAAhB,EAAsB;AACtBA,IAAAA,QAAQ,CAACI,EAAT,CAAY,eAAZ,EAA8BC,SAAD,IAAe;AAC1CN,MAAAA,MAAM,CAACM,SAAD,CAAN;AACD,KAFD;AAGD,GALQ,EAKN,CAACL,QAAD,EAAWF,MAAX,CALM,CAAT;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,QAAQ,IAAI,IAAhB,EAAsB;AACtBA,IAAAA,QAAQ,CAACM,IAAT,CAAc,cAAd,EAA8BR,MAA9B;AACD,GAHQ,EAGN,CAACE,QAAD,EAAWF,MAAX,CAHM,CAAT;;AAKA,WAASS,WAAT,GAAuB;AACrBR,IAAAA,MAAM,CAAC,CAACD,MAAF,CAAN;AACD;;AAED,MAAIA,MAAM,KAAK,IAAf,EAAqB;AACnB,wBACE;AAAA,6BACE,QAAC,aAAD,CAAe,QAAf;AAAwB,QAAA,KAAK,EAAES,WAA/B;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAEP;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MAQO;AACL,wBACE;AAAA,6BACE,QAAC,aAAD,CAAe,QAAf;AAAwB,QAAA,KAAK,EAAEO,WAA/B;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;AACF;;GAhDuBT,G;UACGG,e;;;KADHH,G","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { App as Ide } from './Components/IDE/App'\nimport { App as WebEditor } from './Components/Web Editor/App'\nimport useLocalStorage from './hooks/useLocalStorage'\nimport { io } from 'socket.io-client'\n\nexport const ToggleContext = React.createContext()\n\nexport default function App() {\n  const [Editor, toggle] = useLocalStorage('editor', true)\n  // const [Editor, toggle] = useState('editor', true)\n\n  const [socketIO, setSocket] = useState()\n\n  useEffect(() => {\n    const connector = io('http://localhost:4545')\n    setSocket(connector)\n\n    return () => {\n      connector.disconnect()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (socketIO == null) return\n    socketIO.on('currentEditor', (newEditor) => {\n      toggle(newEditor)\n    })\n  }, [socketIO, Editor])\n\n  useEffect(() => {\n    if (socketIO == null) return\n    socketIO.emit('toggleEditor', Editor)\n  }, [socketIO, Editor])\n\n  function handleClick() {\n    toggle(!Editor)\n  }\n\n  if (Editor === true) {\n    return (\n      <div>\n        <ToggleContext.Provider value={handleClick}>\n          <Ide socket={socketIO} />\n        </ToggleContext.Provider>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <ToggleContext.Provider value={handleClick}>\n          <WebEditor socket={socketIO} />\n        </ToggleContext.Provider>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}