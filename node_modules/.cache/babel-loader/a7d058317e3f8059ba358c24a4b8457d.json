{"ast":null,"code":"var _jsxFileName = \"C:\\\\react project\\\\BroCode\\\\src\\\\Components\\\\Web Editor\\\\CodeEditor.jsx\";\nimport React from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport Heading from \"./Heading\";\nimport Firebase from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = Firebase.database();\nconst Fid = Firebase.auth();\nexport default function BroCode(prop) {\n  const {\n    value,\n    lang,\n    setValue,\n    displayName\n  } = prop;\n\n  function handleEditorChange(value, event) {\n    let id = Fid.currentUser.uid; //get user id\n    //update code in database\n    // lang = html or css or javascript\n\n    db.ref(\"/Users/\" + id + \"/\" + lang + \"/test1/\").set({\n      value\n    }).then(doc => {\n      console.log(doc);\n    });\n    setValue(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        name: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        width: \"100%\",\n        height: \"50vh\",\n        defaultLanguage: lang,\n        defaultValue: value,\n        theme: \"vs-dark\",\n        onChange: handleEditorChange //on change code\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = BroCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"BroCode\");","map":{"version":3,"sources":["C:/react project/BroCode/src/Components/Web Editor/CodeEditor.jsx"],"names":["React","Editor","Heading","Firebase","db","database","Fid","auth","BroCode","prop","value","lang","setValue","displayName","handleEditorChange","event","id","currentUser","uid","ref","set","then","doc","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,EAAE,GAAGD,QAAQ,CAACE,QAAT,EAAX;AACA,MAAMC,GAAG,GAAGH,QAAQ,CAACI,IAAT,EAAZ;AAEA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,MAAyCJ,IAA/C;;AAEA,WAASK,kBAAT,CAA4BJ,KAA5B,EAAmCK,KAAnC,EAA0C;AAExC,QAAIC,EAAE,GAAGV,GAAG,CAACW,WAAJ,CAAgBC,GAAzB,CAFwC,CAET;AAE/B;AACA;;AACAd,IAAAA,EAAE,CAACe,GAAH,CAAO,YAAYH,EAAZ,GAAiB,GAAjB,GAAuBL,IAAvB,GAA8B,SAArC,EACGS,GADH,CACO;AACHV,MAAAA;AADG,KADP,EAIGW,IAJH,CAISC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KANH;AAQAV,IAAAA,QAAQ,CAACF,KAAD,CAAR;AACD;;AACD,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BAGE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEG;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,eAAe,EAAEF,IAHnB;AAIE,QAAA,YAAY,EAAED,KAJhB;AAKE,QAAA,KAAK,EAAC,SALR;AAME,QAAA,QAAQ,EAAEI,kBANZ,CAMiC;;AANjC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;KArCuBN,O","sourcesContent":["import React from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport Heading from \"./Heading\";\r\nimport Firebase from \"../../firebase\";\r\n\r\nconst db = Firebase.database();\r\nconst Fid = Firebase.auth();\r\n\r\nexport default function BroCode(prop) {\r\n  const { value, lang, setValue, displayName } = prop;\r\n\r\n  function handleEditorChange(value, event) {\r\n\r\n    let id = Fid.currentUser.uid;  //get user id\r\n\r\n    //update code in database\r\n    // lang = html or css or javascript\r\n    db.ref(\"/Users/\" + id + \"/\" + lang + \"/test1/\")\r\n      .set({\r\n        value,\r\n      })\r\n      .then((doc) => {\r\n        console.log(doc);\r\n      });\r\n\r\n    setValue(value);\r\n  }\r\n  return (\r\n    <td>\r\n      <div className=\"editor\">\r\n\r\n        \r\n        <Heading name={displayName} />\r\n\r\n        <Editor\r\n          width=\"100%\"\r\n          height=\"50vh\"\r\n          defaultLanguage={lang}\r\n          defaultValue={value}\r\n          theme=\"vs-dark\"\r\n          onChange={handleEditorChange}  //on change code\r\n        />\r\n      </div>\r\n    </td>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}