{"ast":null,"code":"var _jsxFileName = \"C:\\\\code editor\\\\CodeOne-main\\\\frontend\\\\src\\\\Components\\\\Web Editor\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CodeEditor from \"./CodeEditor\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { initialHTML, initialCSS, initialJS } from \"./InitialValues\";\nimport { useState, useEffect } from \"react\";\nimport ColumnResizer from \"react-column-resizer\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/database';\nimport \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBHurO_5lzS-1wYyGKoBqzU3Y02Gdamjr4\",\n  authDomain: \"codeeditor-315d2.firebaseapp.com\",\n  projectId: \"codeeditor-315d2\",\n  storageBucket: \"codeeditor-315d2.appspot.com\",\n  messagingSenderId: \"565594386888\",\n  appId: \"1:565594386888:web:f878168956a881bb27d0fd\"\n};\nconst Firebase = firebase.initializeApp(firebaseConfig);\nconst db = Firebase.database();\nexport function App() {\n  _s();\n\n  const [htmlValue, setHtml] = useLocalStorage(\"html\", initialHTML);\n  const [cssValue, setCSS] = useLocalStorage(\"css\", initialCSS);\n  const [jsValue, setJs] = useLocalStorage(\"js\", initialJS);\n  const [Code, setCode] = useState(`\n<html>\n<body>${htmlValue}</body>\n<style>${cssValue}</style>\n<script>${jsValue}</script>\n</html>`);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setCode(`\n      <html>\n      <body>${htmlValue}</body>\n      <style>${cssValue}</style>\n      <script>${jsValue}</script>\n      </html>`);\n    }, 250);\n    return () => clearTimeout(timeout);\n  }, [htmlValue, cssValue, jsValue]); //   db.ref('/Users/' + id +'/projects/' + proId ).set({\n  //     data\n  // })\n  // .then((doc) => { \n  //     this.setState({newProject:false, ProjectName:''})\n  //     this.props.history.push(`/todos/${proId}`)\n  // })\n  // const updateDatabase = ()=>{\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      className: \"navbar p-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pane top-pane\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n                displayName: \"HTML\",\n                lang: \"html\",\n                value: htmlValue,\n                setValue: setHtml\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ColumnResizer, {\n                className: \"columnResizer resizer\",\n                minWidth: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n                displayName: \"CSS\",\n                lang: \"css\",\n                value: cssValue,\n                setValue: setCSS\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ColumnResizer, {\n                className: \"columnResizer resizer\",\n                minWidth: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n                displayName: \"Javascript\",\n                lang: \"javascript\",\n                value: jsValue,\n                setValue: setJs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outputScreen\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          srcDoc: Code,\n          title: \"output\",\n          width: \"100%\",\n          height: \"100%\",\n          frameBorder: \"0\",\n          sandbox: \"allow-scripts\",\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"H7MVH9+Aa15iVFAW9GxGSMtGv9Y=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/code editor/CodeOne-main/frontend/src/Components/Web Editor/App.js"],"names":["React","CodeEditor","initialHTML","initialCSS","initialJS","useState","useEffect","ColumnResizer","NavBar","useLocalStorage","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Firebase","initializeApp","db","database","App","htmlValue","setHtml","cssValue","setCSS","jsValue","setJs","Code","setCode","timeout","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CodeEditor from \"./CodeEditor\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { initialHTML, initialCSS, initialJS } from \"./InitialValues\";\nimport { useState, useEffect } from \"react\";\nimport ColumnResizer from \"react-column-resizer\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar\";\n\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/database'\nimport \"firebase/auth\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBHurO_5lzS-1wYyGKoBqzU3Y02Gdamjr4\",\n    authDomain: \"codeeditor-315d2.firebaseapp.com\",\n    projectId: \"codeeditor-315d2\",\n    storageBucket: \"codeeditor-315d2.appspot.com\",\n    messagingSenderId: \"565594386888\",\n    appId: \"1:565594386888:web:f878168956a881bb27d0fd\"\n}\n\nconst Firebase = firebase.initializeApp(firebaseConfig);\n\nconst db = Firebase.database()\n\nexport function App() {\n  const [htmlValue, setHtml] = useLocalStorage(\"html\", initialHTML);\n  const [cssValue, setCSS] = useLocalStorage(\"css\", initialCSS);\n  const [jsValue, setJs] = useLocalStorage(\"js\", initialJS);\n  const [Code, setCode] = useState(`\n<html>\n<body>${htmlValue}</body>\n<style>${cssValue}</style>\n<script>${jsValue}</script>\n</html>`);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setCode(`\n      <html>\n      <body>${htmlValue}</body>\n      <style>${cssValue}</style>\n      <script>${jsValue}</script>\n      </html>`);\n    }, 250);\n    return () => clearTimeout(timeout);\n  }, [htmlValue, cssValue, jsValue]);\n\n\n\n//   db.ref('/Users/' + id +'/projects/' + proId ).set({\n//     data\n// })\n// .then((doc) => { \n//     this.setState({newProject:false, ProjectName:''})\n//     this.props.history.push(`/todos/${proId}`)\n// })\n\n// const updateDatabase = ()=>{\n\n// }\n\n\n\n\n  return (\n    <>\n      <NavBar className=\"navbar p-3\" />\n      <center>\n        <div className=\"pane top-pane\">\n          <table>\n            <tbody>\n              <tr>\n                <CodeEditor\n                  displayName=\"HTML\"\n                  lang=\"html\"\n                  value={htmlValue}\n                  setValue={setHtml}\n                />\n\n                <ColumnResizer className=\"columnResizer resizer\" minWidth={0} />\n\n                <CodeEditor\n                  displayName=\"CSS\"\n                  lang=\"css\"\n                  value={cssValue}\n                  setValue={setCSS}\n                />\n\n                <ColumnResizer className=\"columnResizer resizer\" minWidth={0} />\n\n                <CodeEditor\n                  displayName=\"Javascript\"\n                  lang=\"javascript\"\n                  value={jsValue}\n                  setValue={setJs}\n                />\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"outputScreen\">\n          <iframe\n            srcDoc={Code}\n            title=\"output\"\n            width=\"100%\"\n            height=\"100%\"\n            frameBorder=\"0\"\n            sandbox=\"allow-scripts\"\n            loading=\"lazy\"\n          ></iframe>\n        </div>\n      </center>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}