{"ast":null,"code":"import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport state from 'state-local';\nimport config$1 from '../config/index.js';\nimport validators from '../validators/index.js';\nimport compose from '../utils/compose.js';\nimport merge from '../utils/deepMerge.js';\nimport makeCancelable from '../utils/makeCancelable.js';\n/** the local state of the module */\n\nvar _state$create = state.create({\n  config: config$1,\n  isInitialized: false,\n  resolve: null,\n  reject: null,\n  monaco: null\n}),\n    _state$create2 = _slicedToArray(_state$create, 2),\n    getState = _state$create2[0],\n    setState = _state$create2[1];\n/**\r\n * set the loader configuration\r\n * @param {Object} config - the configuration object\r\n */\n\n\nfunction config(config) {\n  setState(function (state) {\n    return {\n      config: merge(state.config, validators.config(config))\n    };\n  });\n}\n/**\r\n * handles the initialization of the monaco-editor\r\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\r\n */\n\n\nfunction init() {\n  var state = getState(function (_ref) {\n    var isInitialized = _ref.isInitialized;\n    return {\n      isInitialized: isInitialized\n    };\n  });\n\n  if (!state.isInitialized) {\n    if (window.monaco && window.monaco.editor) {\n      storeMonacoInstance(window.monaco);\n      return makeCancelable(Promise.resolve(window.monaco));\n    }\n\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\n    setState({\n      isInitialized: true\n    });\n  }\n\n  return makeCancelable(wrapperPromise);\n}\n/**\r\n * injects provided scripts into the document.body\r\n * @param {Object} script - an HTML script element\r\n * @return {Object} - the injected HTML script element\r\n */\n\n\nfunction injectScripts(script) {\n  return document.body.appendChild(script);\n}\n/**\r\n * creates an HTML script element with/without provided src\r\n * @param {string} [src] - the source path of the script\r\n * @return {Object} - the created HTML script element\r\n */\n\n\nfunction createScript(src) {\n  var script = document.createElement('script');\n  return src && (script.src = src), script;\n}\n/**\r\n * creates an HTML script element with the monaco loader src\r\n * @return {Object} - the created HTML script element\r\n */\n\n\nfunction getMonacoLoaderScript(configureLoader) {\n  var state = getState(function (_ref2) {\n    var config = _ref2.config,\n        reject = _ref2.reject;\n    return {\n      config: config,\n      reject: reject\n    };\n  });\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\n\n  loaderScript.onload = function () {\n    return configureLoader();\n  };\n\n  loaderScript.onerror = state.reject;\n  return loaderScript;\n}\n/**\r\n * configures the monaco loader\r\n */\n\n\nfunction configureLoader() {\n  var state = getState(function (_ref3) {\n    var config = _ref3.config,\n        resolve = _ref3.resolve,\n        reject = _ref3.reject;\n    return {\n      config: config,\n      resolve: resolve,\n      reject: reject\n    };\n  });\n  var require = window.require;\n\n  require.config(state.config);\n\n  require(['vs/editor/editor.main'], function (monaco) {\n    storeMonacoInstance(monaco);\n    state.resolve(monaco);\n  }, function (error) {\n    state.reject(error);\n  });\n}\n/**\r\n * store monaco instance in local state\r\n */\n\n\nfunction storeMonacoInstance(monaco) {\n  if (!getState().monaco) {\n    setState({\n      monaco: monaco\n    });\n  }\n}\n/**\r\n * internal helper function\r\n * extracts stored monaco instance\r\n * @return {Object|null} - the monaco instance\r\n */\n\n\nfunction __getMonacoInstance() {\n  return getState(function (_ref4) {\n    var monaco = _ref4.monaco;\n    return monaco;\n  });\n}\n\nvar wrapperPromise = new Promise(function (resolve, reject) {\n  return setState({\n    resolve: resolve,\n    reject: reject\n  });\n});\nvar loader = {\n  config: config,\n  init: init,\n  __getMonacoInstance: __getMonacoInstance\n};\nexport default loader;","map":{"version":3,"sources":["C:/react project/BroCode/node_modules/@monaco-editor/loader/lib/es/loader/index.js"],"names":["slicedToArray","_slicedToArray","state","config$1","validators","compose","merge","makeCancelable","_state$create","create","config","isInitialized","resolve","reject","monaco","_state$create2","getState","setState","init","_ref","window","editor","storeMonacoInstance","Promise","injectScripts","getMonacoLoaderScript","configureLoader","wrapperPromise","script","document","body","appendChild","createScript","src","createElement","_ref2","loaderScript","concat","paths","vs","onload","onerror","_ref3","require","error","__getMonacoInstance","_ref4","loader"],"mappings":"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","sourcesContent":["import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';\r\nimport state from 'state-local';\r\nimport config$1 from '../config/index.js';\r\nimport validators from '../validators/index.js';\r\nimport compose from '../utils/compose.js';\r\nimport merge from '../utils/deepMerge.js';\r\nimport makeCancelable from '../utils/makeCancelable.js';\r\n\r\n/** the local state of the module */\r\n\r\nvar _state$create = state.create({\r\n  config: config$1,\r\n  isInitialized: false,\r\n  resolve: null,\r\n  reject: null,\r\n  monaco: null\r\n}),\r\n    _state$create2 = _slicedToArray(_state$create, 2),\r\n    getState = _state$create2[0],\r\n    setState = _state$create2[1];\r\n/**\r\n * set the loader configuration\r\n * @param {Object} config - the configuration object\r\n */\r\n\r\n\r\nfunction config(config) {\r\n  setState(function (state) {\r\n    return {\r\n      config: merge(state.config, validators.config(config))\r\n    };\r\n  });\r\n}\r\n/**\r\n * handles the initialization of the monaco-editor\r\n * @return {Promise} - returns an instance of monaco (with a cancelable promise)\r\n */\r\n\r\n\r\nfunction init() {\r\n  var state = getState(function (_ref) {\r\n    var isInitialized = _ref.isInitialized;\r\n    return {\r\n      isInitialized: isInitialized\r\n    };\r\n  });\r\n\r\n  if (!state.isInitialized) {\r\n    if (window.monaco && window.monaco.editor) {\r\n      storeMonacoInstance(window.monaco);\r\n      return makeCancelable(Promise.resolve(window.monaco));\r\n    }\r\n\r\n    compose(injectScripts, getMonacoLoaderScript)(configureLoader);\r\n    setState({\r\n      isInitialized: true\r\n    });\r\n  }\r\n\r\n  return makeCancelable(wrapperPromise);\r\n}\r\n/**\r\n * injects provided scripts into the document.body\r\n * @param {Object} script - an HTML script element\r\n * @return {Object} - the injected HTML script element\r\n */\r\n\r\n\r\nfunction injectScripts(script) {\r\n  return document.body.appendChild(script);\r\n}\r\n/**\r\n * creates an HTML script element with/without provided src\r\n * @param {string} [src] - the source path of the script\r\n * @return {Object} - the created HTML script element\r\n */\r\n\r\n\r\nfunction createScript(src) {\r\n  var script = document.createElement('script');\r\n  return src && (script.src = src), script;\r\n}\r\n/**\r\n * creates an HTML script element with the monaco loader src\r\n * @return {Object} - the created HTML script element\r\n */\r\n\r\n\r\nfunction getMonacoLoaderScript(configureLoader) {\r\n  var state = getState(function (_ref2) {\r\n    var config = _ref2.config,\r\n        reject = _ref2.reject;\r\n    return {\r\n      config: config,\r\n      reject: reject\r\n    };\r\n  });\r\n  var loaderScript = createScript(\"\".concat(state.config.paths.vs, \"/loader.js\"));\r\n\r\n  loaderScript.onload = function () {\r\n    return configureLoader();\r\n  };\r\n\r\n  loaderScript.onerror = state.reject;\r\n  return loaderScript;\r\n}\r\n/**\r\n * configures the monaco loader\r\n */\r\n\r\n\r\nfunction configureLoader() {\r\n  var state = getState(function (_ref3) {\r\n    var config = _ref3.config,\r\n        resolve = _ref3.resolve,\r\n        reject = _ref3.reject;\r\n    return {\r\n      config: config,\r\n      resolve: resolve,\r\n      reject: reject\r\n    };\r\n  });\r\n  var require = window.require;\r\n\r\n  require.config(state.config);\r\n\r\n  require(['vs/editor/editor.main'], function (monaco) {\r\n    storeMonacoInstance(monaco);\r\n    state.resolve(monaco);\r\n  }, function (error) {\r\n    state.reject(error);\r\n  });\r\n}\r\n/**\r\n * store monaco instance in local state\r\n */\r\n\r\n\r\nfunction storeMonacoInstance(monaco) {\r\n  if (!getState().monaco) {\r\n    setState({\r\n      monaco: monaco\r\n    });\r\n  }\r\n}\r\n/**\r\n * internal helper function\r\n * extracts stored monaco instance\r\n * @return {Object|null} - the monaco instance\r\n */\r\n\r\n\r\nfunction __getMonacoInstance() {\r\n  return getState(function (_ref4) {\r\n    var monaco = _ref4.monaco;\r\n    return monaco;\r\n  });\r\n}\r\n\r\nvar wrapperPromise = new Promise(function (resolve, reject) {\r\n  return setState({\r\n    resolve: resolve,\r\n    reject: reject\r\n  });\r\n});\r\nvar loader = {\r\n  config: config,\r\n  init: init,\r\n  __getMonacoInstance: __getMonacoInstance\r\n};\r\n\r\nexport default loader;\r\n"]},"metadata":{},"sourceType":"module"}